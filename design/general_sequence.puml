@startuml general_μC_workflow
actor Actor
participant mqtt
participant μC

== Init ==
μC -> mqtt: register
...

== Start μC functionality ==
Actor -> mqtt: trigger: on [new_state]
mqtt -> μC: trigger: on [new_state]


alt new_state != null
    μC -> μC: setState(new_state)

    alt status change successful
        μC -> mqtt: status: new_state [state_json]
    else status change failed
        μC -> mqtt: status: failed [error_json]
    end

else
    μC -> mqtt: status: active [state_json]

    loop μC functionality in progress
        ...
        group On state change
            μC -> mqtt: status: active [state_json]
        end
        ...
    end

    alt task successfully executed and solved
        μC -> mqtt: status: solved [final_state_json]
    else task failed
        μC -> mqtt: status: failed [error_json]
    end
end

== Stop μC functionality ==
Actor -> mqtt: trigger: off
mqtt -> μC: trigger: off
...
μC -> μC: stopping
...
alt task stopped successfully
    μC -> mqtt: status: inactive [final_state_json]
else stopping task failed
    μC -> mqtt: status: failed [error_json]
end
@enduml